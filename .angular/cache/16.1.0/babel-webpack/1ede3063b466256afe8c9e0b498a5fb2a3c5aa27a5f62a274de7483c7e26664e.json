{"ast":null,"code":"import { HttpParams } from \"@angular/common/http\";\nimport { exhaustMap, take } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nlet AuthInterceptService = /*#__PURE__*/(() => {\n  class AuthInterceptService {\n    constructor(authService) {\n      this.authService = authService;\n    }\n    intercept(req, next) {\n      return this.authService.user.pipe(take(1), exhaustMap(user => {\n        if (!user) {\n          return next.handle(req);\n        }\n        const modifiedReq = req.clone({\n          params: new HttpParams().set('auth', user.token)\n        });\n        return next.handle(modifiedReq);\n      }));\n    }\n  }\n  AuthInterceptService.ɵfac = function AuthInterceptService_Factory(t) {\n    return new (t || AuthInterceptService)(i0.ɵɵinject(i1.AuthService));\n  };\n  AuthInterceptService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptService,\n    factory: AuthInterceptService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthInterceptService;\n})();\nexport { AuthInterceptService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}