{"ast":null,"code":"export class UtilityService {\n  capitalize(word) {\n    let firstLetter;\n    let restOfWord;\n    firstLetter = word.charAt(0).toUpperCase();\n    restOfWord = word.slice(1);\n    return firstLetter + restOfWord;\n  }\n  getBikeOptions(bikes) {\n    let bikeTypes;\n    let bikeOptions = [];\n    bikeTypes = bikes?.map(bike => bike.type);\n    bikeTypes?.forEach(bike => {\n      bikeOptions?.push(bike + ' - ' + 'Small');\n      bikeOptions?.push(bike + ' - ' + 'Medium');\n      bikeOptions?.push(bike + ' - ' + 'Large');\n    });\n    return bikeOptions;\n  }\n  appendZero(num) {\n    if (Number.parseInt(num) <= 9) {\n      num = '0' + num;\n    }\n    return num;\n  }\n  getCurrentDate() {\n    let currentDate = new Date();\n    let date = this.appendZero(currentDate.getDate().toString());\n    let month = (currentDate.getMonth() + 1).toString();\n    month = this.appendZero(month);\n    let year = currentDate.getFullYear().toString();\n    // console.log(`${year}-${month}-${date}`);\n    return `${year}-${month}-${date}`;\n  }\n  getLaterDate(days) {\n    const millisInDay = 86400000;\n    let currentDate = new Date(new Date().getTime() + millisInDay * days);\n    let date = this.appendZero(currentDate.getDate().toString());\n    let month = (currentDate.getMonth() + 1).toString();\n    month = this.appendZero(month);\n    let year = currentDate.getFullYear().toString();\n    // console.log(`${year}-${month}-${date}`);\n    return `${year}-${month}-${date}`;\n  }\n  clampLow(num, min) {\n    return num < min ? min : num;\n  }\n  getBikePrice(option, bikes) {\n    // let type = option.split(' ')[0];\n    let bike = bikes?.find(bike => option.includes(bike.type));\n    return bike?.price;\n  }\n  getTotalCost(bikePrice, quantity) {\n    return bikePrice * +quantity;\n  }\n  getFormattedDate(date) {\n    let dateObj = new Date(date);\n    let dateParts = dateObj.toString().split(' ');\n    let result = '';\n    for (let i = 0; i < 4; i++) {\n      if (i === 3) result += ', ';\n      result += dateParts[i] + ' ';\n    }\n    return result;\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}